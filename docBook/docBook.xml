<?xml version='1.0' encoding='UTF-8'?>
<!-- This document was created with Syntext Serna Free. -->
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "docbookV4.5/docbookx.dtd" []>
<article>
    <title>Google Drive Client</title>
    <para>Десктопный клиент Google Drive</para>
    <para>Использован Electron.JS</para>
    <abstract>
        <title>Пример 1: Синхронизация</title>
        <para>Функция обновляет список файлов по запросу пользователя</para>
        <para>По нажатию на кнопку синхронизации на html-странице, вызывается событие Sync.</para>
        <para>Система обращается к Google API за актуальным токеном и сохраняет его в системе.</para>
        <para>Создается массив для хранения результатов. Содержимое элемента массива: ID файла, название, флаг файл/папка.</para>
        <para>Затем запускается рекурсивная функция listFiles, которая отправляет запрос к Google на получение файлов корневого каталога.</para>
        <para>Файлы корневого каталога идентифицируются с помощью флага isRoot.</para>
        <programlisting>
	        ipcMain.on('sync',(event, arg) => {
	            const myApiOauth = electronOauth2(config);
	            myApiOauth.getAccessToken(options)
	            .then(token => {
	                myApiOauth.refreshToken(token.refresh_token)
	                .then(newToken => {
	                    globalToken = newToken.access_token;
	                    resultArray = new Array();
	                    listFiles(newToken.access_token)
	                });
	            });
	        })
   		</programlisting>
    </abstract>
    <abstract>
        <title>Пример 2: Скачивание файла</title>
        <para>Скачивание указанного файла с сервера.</para>
        <para>Сохранение скачанного файла в указанную папку</para>
        <para>По нажатию на кнопку скачивания файла на html-странице, вызывается диалоговое окно с выбором пути сохранения файла(параметр path).</para>
        <para>Параметр arg - имя файла для скачивания, выбирается из списка файлов на html-странице.</para>
        <para>Функция проверяет, существует ли такой файл и не является ли он каталогом, затем генерирует путь на скачивание в зависимости от операционной системы(fullpath).</para>
        <para>Затем генерируется URL скачивания файла и запрос, состоящий из URL'a и токена.</para>
        <para>В случае успешности скачивания Google возвращает код 200. В этом случае файл записывается на ПК используя модуль FS.</para>
        <programlisting>
        ipcMain.on('downloadFile',(event, arg, path) =>{
            for(var i = 0; i &lt; resultArray.length; i++){
                if(resultArray[i].name === arg){
                    if(!resultArray[i].folder){
                        //Генерация пути и адреса скачивания
                        var fullpath = process.platform === "win32" ? path + "\\" + arg
                            : path + "/" + arg;
                        var url = 'https://www.googleapis.com/drive/v2/files/' + resultArray[i].id + '?alt=media';
                        //Отправка запроса на сервер Google Drive
                        request({
                            'url': url,
                            'headers' : {
                                'Authorization': 'Bearer ' + globalToken
                            }
                        })
                        .on('response', function(response) {
                            if(response.statusCode == 200)
                                win.webContents.send('error',"Скачивание успешно");
                            else
                            win.webContents.send('error',"Ошибка при скачивании");
                        })
                        .pipe(fs.createWriteStream(fullpath))
                    }
                    else
                        win.webContents.send('error',"Это не файл");
                }
            }
        })
    	</programlisting>
    </abstract>
    <abstract>
        <title>Пример 3: Загрузка файла</title>
        <para>Загрузка файла в Google Drive</para>
        <para>По нажатию на кнопку загрузки файла появляется диалоговое окно с выбором файла и вызывается событие (параметр arg - путь к файлу)</para>
        <para>Модуль FS читает указанный файл и записывает его в буфер.</para>
        <para>Затем система генерирует запрос:</para>
        <para>Url - путь к файлам в Google Drive; qs - тип загрузки;</para>
        <para>headers - хранит временный токен;</para>
        <para>title - имя файла(извлекается с помощью модуля Path);</para>
        <para>Content-Type - Mime объекта; body - файл для загрузки.</para>
        <para>В результате выполнения операции получаем метаинформацию о загруженом файле и дописываем его в общий список файлов</para>
        <programlisting>
        ipcMain.on('sendFile', (event, arg) => {  
            var fstatus = fs.statSync(arg);
              fs.open(arg, 'r', function(status, fileDescripter) {
                if (status) {
                  callback(status.message);
                  return;
                }
                //Загрузка файла с локальной машины в буфер
                var buffer = new Buffer(fstatus.size);
                console.log("NAME: ",path.parse(arg).base);
                fs.read(fileDescripter, buffer, 0, fstatus.size, 0, function(err, num) {
                    request.post({
                        'url': 'https://www.googleapis.com/upload/drive/v2/files',
                        'qs': {
                            'uploadType': 'multipart'
                        },
                        'headers' : {
                            'Authorization': 'Bearer ' + globalToken
                        },
                        'multipart':  [
                            {
                                'Content-Type': 'application/json; charset=UTF-8',
                                'body': JSON.stringify({
                                    'title': path.parse(arg).base
                                })
                            },
                            {
                                'Content-Type': mime.lookup(arg) || "application/octet-stream",
                                'body': buffer
                            }
                        ]
                    },function(arg0,arg1,arg2){
                        var jsonArg = JSON.parse(arg2)
                        var name = jsonArg["title"]
                        var id = jsonArg["id"]
                        var tmp = {};
                        tmp.id = id;
                        tmp.name = name;
                        tmp.folder = false;
                        resultArray.push(tmp);
                        write();
                    });  
                });
            }); 
        }); 
    	</programlisting>
    </abstract>
</article>
